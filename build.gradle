allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'info.solidsoft.pitest'

    group = 'com.ffbit'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "org.hamcrest:hamcrest-all:1.3"
        testCompile "junit:junit:4.12"
        testCompile "pl.pragmatists:JUnitParams:1.0.4"
        testCompile "org.mockito:mockito-core:1.10.19"
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '2.9'
    }


    task initSourceFolders {
        sourceSets*.allSource.srcDirs*.each { it.mkdirs() }
    }

    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        exclude(["**/AllTests*"])
    }

    pitest {
        targetClasses = ['com.ffbit.geometry.*']
        threads = 4
        excludedMethods = ['hashCode']
    }

}

project('geometry-matchers') {
    dependencies {
        compile "org.hamcrest:hamcrest-all:1.3"
        compile project(":geometry-primitives")
    }
}

project('convex-hull') {
    dependencies {
        compile project(":geometry-primitives")
        testCompile project(":geometry-matchers")
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.6'
    }

}

task testReport(dependsOn: [clean, test], type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn test, subprojects*.test
}

defaultTasks 'clean', 'testReport', 'pitest'
